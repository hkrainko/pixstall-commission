// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/streadway/amqp"
	"go.mongodb.org/mongo-driver/mongo"
	"google.golang.org/grpc"
	"pixstall-commission/app/comm-msg-delivery/delivery/ws"
	ws2 "pixstall-commission/app/comm-msg-delivery/repo/ws"
	"pixstall-commission/app/commission/delivery/http"
	rabbitmq2 "pixstall-commission/app/commission/delivery/rabbitmq"
	mongo2 "pixstall-commission/app/commission/repo/mongo"
	"pixstall-commission/app/commission/usecase"
	grpc2 "pixstall-commission/app/image/grpc"
	mongo3 "pixstall-commission/app/message/repo/mongo"
	"pixstall-commission/app/msg-broker/repo/rabbitmq"
)

// Injectors from wire.go:

func InitCommissionMessageController(db *mongo.Database, grpcConn *grpc.ClientConn, conn *amqp.Connection, hub *ws.Hub) ws.CommissionMessageController {
	repo := mongo2.NewMongoCommissionRepo(db)
	imageRepo := grpc2.NewGRPCImageRepository(grpcConn)
	msg_brokerRepo := rabbitmq.NewRabbitMQMsgBrokerRepo(conn)
	messageRepo := mongo3.NewMongoMessageRepo(db)
	comm_msg_deliveryRepo := ws2.NewWSCommMsgDeliveryRepo(hub)
	useCase := usecase.NewCommissionUseCase(repo, imageRepo, msg_brokerRepo, messageRepo, comm_msg_deliveryRepo)
	commissionMessageController := ws.NewCommissionMessageController(useCase, hub)
	return commissionMessageController
}

func InitCommissionController(db *mongo.Database, grpcConn *grpc.ClientConn, conn *amqp.Connection, hub *ws.Hub) http.CommissionController {
	repo := mongo2.NewMongoCommissionRepo(db)
	imageRepo := grpc2.NewGRPCImageRepository(grpcConn)
	msg_brokerRepo := rabbitmq.NewRabbitMQMsgBrokerRepo(conn)
	messageRepo := mongo3.NewMongoMessageRepo(db)
	comm_msg_deliveryRepo := ws2.NewWSCommMsgDeliveryRepo(hub)
	useCase := usecase.NewCommissionUseCase(repo, imageRepo, msg_brokerRepo, messageRepo, comm_msg_deliveryRepo)
	commissionController := http.NewCommissionController(useCase)
	return commissionController
}

func InitCommissionMessageBroker(db *mongo.Database, conn *amqp.Connection, grpcConn *grpc.ClientConn, hub *ws.Hub) rabbitmq2.CommissionMessageBroker {
	repo := mongo2.NewMongoCommissionRepo(db)
	imageRepo := grpc2.NewGRPCImageRepository(grpcConn)
	msg_brokerRepo := rabbitmq.NewRabbitMQMsgBrokerRepo(conn)
	messageRepo := mongo3.NewMongoMessageRepo(db)
	comm_msg_deliveryRepo := ws2.NewWSCommMsgDeliveryRepo(hub)
	useCase := usecase.NewCommissionUseCase(repo, imageRepo, msg_brokerRepo, messageRepo, comm_msg_deliveryRepo)
	commissionMessageBroker := rabbitmq2.NewCommissionMessageBroker(useCase, conn)
	return commissionMessageBroker
}
